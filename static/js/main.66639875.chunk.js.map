{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list-components.js","components/search-box/search-box-component.js","App.js","index.js"],"names":["Card","props","monster","id","name","email","className","alt","src","CardList","console","log","monsters","map","SearchBox","type","placeholder","onChange","onChangeHandler","App","useState","searchField","setSearchField","data","setData","useEffect","fetch","then","response","json","users","filteredMonster","filter","toLocaleLowerCase","includes","event","target","value","rootElement","document","getElementById","createRoot","render"],"mappings":"mPAiBeA,EAbF,SAACC,GACZ,MAA4BA,EAAMC,QAA1BC,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAClB,OACE,sBAAKC,UAAU,iBAAgB,UAC7B,qBACEC,IAAG,kBAAaH,GAChBI,IAAG,+BAA0BL,EAAE,4BAEjC,6BAAKC,IACL,4BAAIC,MAN+BF,EASzC,ECaeM,EAzBE,SAACR,GAChBS,QAAQC,IAAIV,GACZS,QAAQC,IAAI,UACZ,IAAQC,EAAaX,EAAbW,SACR,OACE,qBAAKN,UAAU,YAAW,SACvBM,GACCA,EAASC,KAAI,SAACX,GACgBA,EAApBE,KAAoBF,EAAdG,MAAcH,EAAPC,GACrB,OASE,aARA,CAQC,EAAI,CAACD,QAASA,GAGnB,KAGR,ECfeY,G,MAXG,SAACb,GACjB,OACE,uBACEK,UAAS,qBAAgBL,EAAMK,WAC/BS,KAAK,SACLC,YAAaf,EAAMe,YACnBC,SAAUhB,EAAMiB,iBAGtB,GCsDeC,EAzDH,WACV,MAAsCC,mBAAS,IAAG,mBAA3CC,EAAW,KAAEC,EAAc,KAClC,EAAwBF,mBAAS,IAAG,mBAA7BG,EAAI,KAAEC,EAAO,KAEpBC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GAAK,OAAKN,EAAQM,EAAM,GACnC,GAAG,IAEH,IAAMC,EACJR,IACI,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMS,QAAO,SAAC9B,GACZ,OAAOA,EAAQE,KAAK6B,oBAAoBC,SAASb,EACnD,KAOF,OACE,qBAAKf,UAAU,MAAK,SAWlB,gCACE,oBAAIA,UAAU,YAAW,+BAYzB,cAAC,EAAS,CACRY,gBA/Be,SAACiB,GACtB,IAAMd,EAAcc,EAAMC,OAAOC,MAAMJ,oBACvCX,EAAeD,EACjB,EA6BQL,YAAa,kBACbV,UAAW,uBAEb,cAAC,EAAQ,CAACM,SAAUmB,QAI5B,EC1DMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.66639875.chunk.js","sourcesContent":["import { component } from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nconst Card = (props) => {\r\n  const { id, name, email } = props.monster;\r\n  return (\r\n    <div className=\"card-container\" key={id}>\r\n      <img\r\n        alt={`monster ${name}`}\r\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n      />\r\n      <h2>{name}</h2>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import { component } from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport Card from \"../card/card.component\";\r\n\r\nconst CardList = (props) => {\r\n  console.log(props);\r\n  console.log(\"render\");\r\n  const { monsters } = props;\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters &&\r\n        monsters.map((monster) => {\r\n          const { name, email, id } = monster; //optimisation\r\n          return (\r\n            // <div className=\"card-container\" key={id}>\r\n            //   <img\r\n            //     alt={`monster ${name}`}\r\n            //     src={`https://robohash.org/${id}?set=set2&size=180x180`}\r\n            //   />\r\n            //   <h2>{name}</h2>\r\n            //   <p>{email}</p>\r\n            // </div>\r\n            <Card monster={monster} />\r\n          );\r\n          // <h1 key={monster.id}>{monster.name}</h1>;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import { component } from \"react\";\r\nimport \"./search-box.styles.css\";\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <input\r\n      className={`search-box ${props.className}`}\r\n      type=\"search\"\r\n      placeholder={props.placeholder}\r\n      onChange={props.onChangeHandler}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from \"react\";\n// import \"./styles.css\";\nimport \"./App.css\";\n// import StatesClass from \"./react_concepts/stateClass\";\n// import StateFunction from \"./react_concepts/stateFunction\";\nimport CardList from \"./components/card-list/card-list-components\";\nimport SearchBox from \"./components/search-box/search-box-component\";\n\nconst App = () => {\n  const [searchField, setSearchField] = useState(\"\");\n  const [data, setData] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => setData(users));\n  }, []);\n\n  const filteredMonster =\n    data &&\n    data?.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n  const onSearchChange = (event) => {\n    const searchField = event.target.value.toLocaleLowerCase();\n    setSearchField(searchField);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <input\n        className=\"search-box\"\n        type=\"search\"\n        placeholder=\"search monsters\"\n        onChange={onSearchChange}\n        {(event) => {\n          const searchField = event.target.value.toLocaleLowerCase();\n          setSearchField(searchField);\n        }} */}\n      {/* /> */}\n      <div>\n        <h1 className=\"app-title\"> Monsters Rolodex</h1>\n        {/* {filteredMonster &&\n          filteredMonster.map((monster, index) => {\n            return (\n              <div key={index}>\n                <h1>{monster.name}</h1>\n              </div>\n            );\n          })} */}\n\n        {/* cardListComponents */}\n        {/* <CardList monsters={\"I am the monsters\"} anything={[\"a\", \"b\"]} /> */}\n        <SearchBox\n          onChangeHandler={onSearchChange}\n          placeholder={\"Search Monsters\"}\n          className={\"monster-Search-box\"}\n        />\n        <CardList monsters={filteredMonster} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}